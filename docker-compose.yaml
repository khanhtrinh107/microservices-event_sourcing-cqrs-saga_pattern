version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: product
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3306:3306"
    networks:
      - app-network
  mysql-1:
    image: mysql:8.0
    container_name: mysql-user-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3307:3306"
    networks:
      - app-network
  mysql-3:
    image: mysql:8.0
    container_name: order-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3308:3306"
    networks:
      - app-network
  mysql-4:
    image: mysql:8.0
    container_name: inventory-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventory
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3309:3306"
    networks:
      - app-network

  mysql-5:
    image: mysql:8.0
    container_name: payment-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payment
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3310:3306"
    networks:
      - app-network

  mysql-6:
    image: mysql:8.0
    container_name: shipment-container
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shipment
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3311:3306"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    restart: "on-failure"
    networks:
      - app-network

  kafka-1:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    restart: "on-failure"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    restart: always
    command: [ "redis-server", "--appendonly", "yes" ]
networks:
  app-network:
    driver: bridge
